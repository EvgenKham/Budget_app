import Vue from "vue";

const transacionsStore = {
  namespaced: true,
  state: {
    list: {
      1: {
        type: 'INCOME',
        value: 100,
        comment: 'Some comment',
        id: 1,
      },
      2: {
        type: 'OUTCOME',
        value: -50,
        comment: 'Some outcome comment',
        id: 2,
      },
    },
    sortedList: {
      type: Object,
      default: () => ({}),
    },
  },
  getters: {
    getList: (state) => {
      return state.list;
    },
    getTotalBalance: (state) => {
      return Object.values(state.list).reduce(
        (acc, item) => acc + item.value,
        0
      );
    },
    filteredList: (state, type) => {
      const listAll = Object.values(state.list);
      let filtedArr = null;

      if(type === 'ALL') {
        filtedArr = state.list;
      } else {
        filtedArr = listAll.filter( item => item.type === type );
        // converting the array to the object because in start 'sortedList' is object (This isn't necessary)
        // Vue.set(state.sortedList, resultArr);
        // state.sortedList = { ...resultArr};
      }

      return filtedArr;
      // for (let item in resultArr) {
        // Vue.set(state.sortedList, item.id, item);
      // }
      // Vue.set( state.sortedList, ...sortList);
      // console.log(resultArr);
    },
  },
  mutations: {
    ADD_TRANSACTION (state, newTrans ) {
      Vue.set( state.list, newTrans.id, newTrans );
    },
    DELETE_TRANSACTION (state, id) {
      Vue.delete( state.list, id);
    },
    SORT_TRANSACTIONS (state, type) {
      const listAll = Object.values(state.list);
      let resultArr = null;

      if(type === 'ALL') {
        resultArr = state.list;
      } else {
        resultArr = listAll.filter( item => item.type === type );
        // converting the array to the object because in start 'sortedList' is object (This isn't necessary)
        // Vue.set(state.sortedList, resultArr);
        // state.sortedList = { ...resultArr};
      }

      state.sortedList = resultArr;
      // for (let item in resultArr) {
        // Vue.set(state.sortedList, item.id, item);
      // }
      // Vue.set( state.sortedList, ...sortList);
      // console.log(resultArr);
      console.log(state.sortedList);
    }
  },
  actions: {
    addNewTransaction ({ commit }, data) {
      const newTrans = {
        ...data,
        id: String(Math.random()),
      };
      commit("ADD_TRANSACTION", newTrans);
    },
    deleteTransacrion ({ commit }, id) {
      commit("DELETE_TRANSACTION", id);
    },
    sotrList ({ commit }, type) {
      commit("SORT_TRANSACTIONS", type);
    },
  },
};

export default transacionsStore;
